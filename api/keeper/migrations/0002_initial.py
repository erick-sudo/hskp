# Generated by Django 5.0.4 on 2024-04-22 18:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('keeper', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cleaner',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='booking',
            name='cleaners',
            field=models.ManyToManyField(related_name='bookings', to='keeper.cleaner'),
        ),
        migrations.AddField(
            model_name='booking',
            name='cleaning_frequency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='keeper.cleaningfrequency'),
        ),
        migrations.AddField(
            model_name='creditcard',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_card', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='booking',
            name='payment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='keeper.paymentmethod'),
        ),
        migrations.AddField(
            model_name='subservice',
            name='clean_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_services', to='keeper.cleantype'),
        ),
        migrations.AddField(
            model_name='booking',
            name='services',
            field=models.ManyToManyField(related_name='bookings', to='keeper.subservice'),
        ),
    ]
